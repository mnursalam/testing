@model PagedList.IPagedList<MvcTesting.Models.Movie>

@{
    ViewBag.Title = "Index";
}

@helper Pagination(PagedList.IPagedList<MvcTesting.Models.Movie> model)
{
    @Html.Raw("Page "); @Html.TextBox("input_page", (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), null,  new Dictionary<string, object>(){{ "style", "width:20px;" }});  <text>of</text> @Model.PageCount
    if (Model.HasPreviousPage)
    {
        @Ajax.ActionLink("First", "ajax_list", "Movie", new { page = 1}, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"})
        
        @Html.Raw(" | ");
        @Ajax.ActionLink("Previous", "ajax_list", new {page = Model.PageNumber - 1}, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"})
    }
    else{
     @:First | Previous
    }
    @Html.Raw(" | ")
    if (Model.HasNextPage)
    {
        @Ajax.ActionLink("Next", "ajax_list", "Movie", new {page = Model.PageNumber + 1}, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"})
        @Html.Raw(" | "); 
        @Ajax.ActionLink("Last", "ajax_list", new {page = Model.PageCount}, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"})
    }
    else{
     @:Next | Last     
    }
        
}

<h2>ajax_list</h2>
@Ajax.ActionLink("Add Data", "ajax_new_form", new { data = "testing bro" }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "result" ,  HttpMethod = "GET"})  

<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th></th>
    </tr>
    
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price) 
        </td>
        <td>            
            @Ajax.ActionLink("Edit", "ajax_edit", new { id = item.Id }, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"}) |
            @Ajax.ActionLink("Detail", "ajax_detail", new { id = item.Id }, 
                 new AjaxOptions { HttpMethod = "GET", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result"}) |            
            @Ajax.ActionLink("Delete", "ajax_delete", new { id = item.Id }, 
                 new AjaxOptions { HttpMethod = "POST", 
                 InsertionMode = InsertionMode.Replace, 
                 UpdateTargetId = "result", Confirm = "Are you sure?"})            
        </td>
    </tr>
}
   
</table>

<div>
   @Pagination(Model)    
</div>

<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
<script type="text/javascript">        
   $("#input_page").bind('keypress', function (e) {
     if (e.keyCode == 13) { //Enter keycode
       var url_value = "/movie/ajax_list?page=" + this.value;
       $.ajax({
         url: url_value,
           success: function (data) {
           $('#result').html(data);
         }
      });
     }
   });

   $("#input_page").keydown(function (event) {
       // Allow: backspace, delete, tab, escape, and enter
       if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
           // Allow: Ctrl+A
           (event.keyCode == 65 && event.ctrlKey === true) ||
           // Allow: home, end, left, right
           (event.keyCode >= 35 && event.keyCode <= 39)) {
           // let it happen, don't do anything
           return;
       }
       else {
           // Ensure that it is a number and stop the keypress
           if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
               event.preventDefault();
           }
       }
   });
   
 </script>