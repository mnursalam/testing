@model PagedList.IPagedList<MvcTesting.Models.Movie>

@{
    ViewBag.Title = "Index";
}
@helper Pagination(PagedList.IPagedList<MvcTesting.Models.Movie> model)
{
    @Html.Raw("Page "); @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) <text>of</text> @Model.PageCount
    if (Model.HasPreviousPage)
    {
        @Html.ActionLink("First", "Index", new { page = 1})
        @Html.Raw(" | ");
        @Html.ActionLink("Previous", "Index", new {page = Model.PageNumber - 1})
    }
    else{
     @:First | Previous
    }
    @Html.Raw(" | ")
    if (Model.HasNextPage)
    {
        @Html.ActionLink("Next", "Index", new {page = Model.PageNumber + 1})
        @Html.Raw(" | "); 
        @Html.ActionLink("Last", "Index", new {page = Model.PageCount})
    }
    else{
     @:Next | Last     
    }
        
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price) 
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
 <div>
   @Pagination(Model)    
</div>
